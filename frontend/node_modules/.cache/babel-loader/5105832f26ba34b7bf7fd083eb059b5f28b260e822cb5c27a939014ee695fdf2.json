{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jamie\\\\estimating_system_V2\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const fetchTodos = () => {\n    fetch('http://localhost:3000/todos').then(res => res.json()).then(setTodos).catch(console.error);\n  };\n  const addTodo = () => {\n    if (!newTodo.trim()) return;\n    fetch('http://localhost:3000/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: newTodo\n      })\n    }).then(() => {\n      setNewTodo('');\n      fetchTodos();\n    }).catch(console.error);\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","fetchTodos","fetch","then","res","json","catch","console","error","addTodo","trim","method","headers","body","JSON","stringify","title","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","todo","id","_c","$RefreshReg$"],"sources":["C:/Users/Jamie/estimating_system_V2/frontend/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\ntype Todo = {\n  id: number;\n  title: string;\n};\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  const fetchTodos = () => {\n    fetch('http://localhost:3000/todos')\n      .then(res => res.json())\n      .then(setTodos)\n      .catch(console.error);\n  };\n\n  const addTodo = () => {\n    if (!newTodo.trim()) return;\n\n    fetch('http://localhost:3000/todos', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: newTodo })\n    })\n      .then(() => {\n        setNewTodo('');\n        fetchTodos();\n      })\n      .catch(console.error);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Todos</h1>\n\n      <input\n        value={newTodo}\n        onChange={e => setNewTodo(e.target.value)}\n        placeholder=\"Enter new todo\"\n      />\n      <button onClick={addTodo}>Add Todo</button>\n\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>{todo.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACL,QAAQ,CAAC,CACdQ,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC,EAAE;IAErBR,KAAK,CAAC,6BAA6B,EAAE;MACnCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEjB;MAAQ,CAAC;IACzC,CAAC,CAAC,CACCI,IAAI,CAAC,MAAM;MACVH,UAAU,CAAC,EAAE,CAAC;MACdC,UAAU,CAAC,CAAC;IACd,CAAC,CAAC,CACDK,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKuB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEd7B,OAAA;MACE8B,KAAK,EAAEzB,OAAQ;MACf0B,QAAQ,EAAEC,CAAC,IAAI1B,UAAU,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF7B,OAAA;MAAQmC,OAAO,EAAEpB,OAAQ;MAAAU,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3C7B,OAAA;MAAAyB,QAAA,EACGtB,KAAK,CAACiC,GAAG,CAACC,IAAI,iBACbrC,OAAA;QAAAyB,QAAA,EAAmBY,IAAI,CAACf;MAAK,GAApBe,IAAI,CAACC,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC3B,EAAA,CAhDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}